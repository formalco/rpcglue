package {{ .Package }}

import (
  "github.com/formalco/rpcglue/client"
  {{ range .Imports }}
    {{ .Name }} "{{ .Path }}"
  {{ end }}
)

func New{{ .Service }}Client(rpcClient client.Client) *{{ .Service }} {
  c := new({{ .Service }})
  c.RPC = rpcClient
  return c
}

type {{ .Service }}IFace interface {
  {{ range .Methods }}
    {{ .Name }}({{ if .ArgType }}args {{ .ArgType }}{{ end }}) ({{ if .ReplyType }}{{ .ReplyType }}, {{ end }}error)
  {{ end }}
}

type {{ .Service }} struct {
  RPC client.Client
}

{{ range .Methods }}
  func (c *{{ $.Service }}) {{ .Name }}({{ if .ArgType }}args {{ .ArgType }}{{ end }}) ({{ if .ReplyType }}{{ .ReplyType }}, {{ end }}error) {
    var reply {{ .ActualReplyType }}
    err := c.RPC.Call(
      "{{ $.Service }}.{{ .Name }}",
      {{ if .ArgType }}args,{{ else }}struct{}{},{{ end }}
      &reply,
    )
    return {{ if .ReplyType}}reply, {{ end }}err
  }
{{ end }}
