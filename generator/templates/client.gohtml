package {{ .Package }}

import (
  "github.com/segmentio/glue/client"
  {{ range .Imports }}
    {{ .Name }} "{{ .Path }}"
  {{ end }}
)

func New{{ .Service }}Client(rpcClient client.Client) *{{ .Service }} {
  c := new({{ .Service }})
  c.RPC = rpcClient
  return c
}

type {{ .Service }}IFace interface {
  {{ range .Methods }}
    {{ .Name }}({{ if .ArgType }}args {{ .ArgType }}{{ end }}) ({{ if .ReplyType }}{{ .ReplyType }}, {{ end }}error)
  {{ end }}
}

type {{ .Service }} struct {
  RPC client.Client
}

{{ range .Methods }}
  func (c *{{ $.Service }}) {{ .Name }}({{ if .ArgType }}args {{ .ArgType }}{{ end }}) {{ if .ReplyType }}({{ .ReplyType }}, error){{ else }}error{{ end }} {
    var reply {{ .ActualReplyType }}
    {{ if .ArgType }}
    err := c.RPC.Call("{{ $.Service }}.{{ .Name }}", args, &reply)
    {{ else }}
    err := c.RPC.Call("{{ $.Service }}.{{ .Name }}", struct{}{}, &reply)
    {{ end }}
    {{ if .ReplyType }}
    return reply, err
    {{ else }}
    return err
    {{ end }}
  }
{{ end }}
